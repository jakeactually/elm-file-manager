var _user$project$FileManager_Port$getBounds = _elm_lang$core$Native_Platform.outgoingPort(
	'getBounds',
	function (v) {
		return null;
	});
var _user$project$FileManager_Port$boundsGotten = _elm_lang$core$Native_Platform.incomingPort(
	'boundsGotten',
	_elm_lang$core$Json_Decode$list(
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (x) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (y) {
						return A2(
							_elm_lang$core$Json_Decode$andThen,
							function (w) {
								return A2(
									_elm_lang$core$Json_Decode$andThen,
									function (h) {
										return _elm_lang$core$Json_Decode$succeed(
											{x: x, y: y, w: w, h: h});
									},
									A2(_elm_lang$core$Json_Decode$field, 'h', _elm_lang$core$Json_Decode$int));
							},
							A2(_elm_lang$core$Json_Decode$field, 'w', _elm_lang$core$Json_Decode$int));
					},
					A2(_elm_lang$core$Json_Decode$field, 'y', _elm_lang$core$Json_Decode$int));
			},
			A2(_elm_lang$core$Json_Decode$field, 'x', _elm_lang$core$Json_Decode$int))));
var _user$project$FileManager_Port$upload = _elm_lang$core$Native_Platform.outgoingPort(
	'upload',
	function (v) {
		return v;
	});
var _user$project$FileManager_Port$filesAmount = _elm_lang$core$Native_Platform.incomingPort('filesAmount', _elm_lang$core$Json_Decode$int);
var _user$project$FileManager_Port$progress = _elm_lang$core$Native_Platform.incomingPort('progress', _elm_lang$core$Json_Decode$int);
var _user$project$FileManager_Port$cancel = _elm_lang$core$Native_Platform.outgoingPort(
	'cancel',
	function (v) {
		return null;
	});
var _user$project$FileManager_Port$uploaded = _elm_lang$core$Native_Platform.incomingPort(
	'uploaded',
	_elm_lang$core$Json_Decode$null(
		{ctor: '_Tuple0'}));
var _user$project$FileManager_Port$download = _elm_lang$core$Native_Platform.outgoingPort(
	'download',
	function (v) {
		return _elm_lang$core$Native_List.toArray(v).map(
			function (v) {
				return v;
			});
	});
var _user$project$FileManager_Port$open = _elm_lang$core$Native_Platform.incomingPort(
	'open',
	_elm_lang$core$Json_Decode$null(
		{ctor: '_Tuple0'}));
var _user$project$FileManager_Port$close = _elm_lang$core$Native_Platform.outgoingPort(
	'close',
	function (v) {
		return _elm_lang$core$Native_List.toArray(v).map(
			function (v) {
				return v;
			});
	});
