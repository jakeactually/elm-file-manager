var _user$project$FileManager_Util$button = F2(
	function (atts, childs) {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('button'),
				_1: atts
			},
			childs);
	});
var _user$project$FileManager_Util$icon2 = function (text_) {
	return A2(
		_elm_lang$html$Html$i,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('material-icons'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(text_),
			_1: {ctor: '[]'}
		});
};
var _user$project$FileManager_Util$icon = F3(
	function (text_, title_, msg) {
		return A2(
			_user$project$FileManager_Util$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('button'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('icon'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$title(title_),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(msg),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$i,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('material-icons'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(text_),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$FileManager_Util$isJust = function (maybe) {
	var _p0 = maybe;
	if (_p0.ctor === 'Just') {
		return true;
	} else {
		return false;
	}
};
var _user$project$FileManager_Util$arraySwap = F3(
	function (index1, index2, array) {
		var maybe2 = A2(_elm_lang$core$Array$get, index2, array);
		var maybe1 = A2(_elm_lang$core$Array$get, index1, array);
		var _p1 = {ctor: '_Tuple2', _0: maybe1, _1: maybe2};
		if (((_p1.ctor === '_Tuple2') && (_p1._0.ctor === 'Just')) && (_p1._1.ctor === 'Just')) {
			return A3(
				_elm_lang$core$Array$set,
				index1,
				_p1._1._0,
				A3(_elm_lang$core$Array$set, index2, _p1._0._0, array));
		} else {
			return array;
		}
	});
var _user$project$FileManager_Util$swap = F3(
	function (index1, index2, list) {
		return _elm_lang$core$Array$toList(
			A3(
				_user$project$FileManager_Util$arraySwap,
				index1,
				index2,
				_elm_lang$core$Array$fromList(list)));
	});
var _user$project$FileManager_Util$indexedZip = _elm_lang$core$List$indexedMap(
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}));
var _user$project$FileManager_Util$zip = _elm_lang$core$List$map2(
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}));
var _user$project$FileManager_Util$remove = F2(
	function (index, list) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			A2(_elm_lang$core$List$take, index, list),
			A2(_elm_lang$core$List$drop, index + 1, list));
	});
var _user$project$FileManager_Util$set = F3(
	function (index, item, list) {
		return _elm_lang$core$Array$toList(
			A3(
				_elm_lang$core$Array$set,
				index,
				item,
				_elm_lang$core$Array$fromList(list)));
	});
var _user$project$FileManager_Util_ops = _user$project$FileManager_Util_ops || {};
_user$project$FileManager_Util_ops['!!'] = F2(
	function (list, index) {
		return A2(
			_elm_lang$core$Array$get,
			index,
			_elm_lang$core$Array$fromList(list));
	});
