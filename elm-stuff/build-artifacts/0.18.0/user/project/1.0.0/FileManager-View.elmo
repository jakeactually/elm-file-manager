var _user$project$FileManager_View$nameDialog = F2(
	function (name, $new) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('screen'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('modal'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$label,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('name'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Nombre'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('text'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(name),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$FileManager_Model$Name),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('min alert right'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$CloseNameDialog),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Cancelar'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('min'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														$new ? _user$project$FileManager_Model$NewDir : _user$project$FileManager_Model$Rename),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Aceptar'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$FileManager_View$toPx = function (n) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(n),
		'px');
};
var _user$project$FileManager_View$renderCount = F2(
	function (_p0, selected) {
		var _p1 = _p0;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('count'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'left',
								_1: _user$project$FileManager_View$toPx(_p1._0 + 5)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'top',
									_1: _user$project$FileManager_View$toPx(_p1._1 - 25)
								},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(
						_elm_lang$core$List$length(selected))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$FileManager_View$contextMenu = F5(
	function (_p2, maybe, paste, many, filesAmount) {
		var _p3 = _p2;
		var _p6 = _p3._1;
		var _p5 = _p3._0;
		return (_elm_lang$core$Native_Utils.cmp(filesAmount, 0) > 0) ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('context-menu'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'left',
								_1: _user$project$FileManager_View$toPx(_p5)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'top',
									_1: _user$project$FileManager_View$toPx(_p6)
								},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('div white cancel'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Cancel),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _user$project$FileManager_Util$icon2('cancel'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text('Cancelar'),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('context-menu'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'left',
								_1: _user$project$FileManager_View$toPx(_p5)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'top',
									_1: _user$project$FileManager_View$toPx(_p6)
								},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			function () {
				var _p4 = maybe;
				if (_p4.ctor === 'Just') {
					return {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('div white'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Download),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _user$project$FileManager_Util$icon2('file_download'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text('Descargar'),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								many ? {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('div white disabled'),
									_1: {ctor: '[]'}
								} : {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('div white'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$OpenNameDialog),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _user$project$FileManager_Util$icon2('mode_edit'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text('Cambiar nombre'),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('div white'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Cut),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _user$project$FileManager_Util$icon2('content_cut'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html$text('Cortar'),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										(paste && _p4._0.isDir) ? {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('div white'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Paste),
												_1: {ctor: '[]'}
											}
										} : {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('div white disabled'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _user$project$FileManager_Util$icon2('content_paste'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html$text('Pegar'),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('div white'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Delete),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _user$project$FileManager_Util$icon2('delete'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html$text('Eliminar'),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					};
				} else {
					return {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$label,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('file-input'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('file'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$multiple(true),
												_1: {
													ctor: '::',
													_0: _user$project$FileManager_Events$onChange(_user$project$FileManager_Model$Upload),
													_1: {ctor: '[]'}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: _user$project$FileManager_Util$icon2('file_upload'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text('Subir'),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('div white'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$OpenNameDialog),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _user$project$FileManager_Util$icon2('create_new_folder'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text('Nueva carpeta'),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									paste ? {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('div white'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$FileManager_Model$Paste),
											_1: {ctor: '[]'}
										}
									} : {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('div white disabled'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _user$project$FileManager_Util$icon2('content_paste'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html$text('Pegar'),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}
					};
				}
			}());
	});
var _user$project$FileManager_View$renderHelper = function (b) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('helper'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'left',
							_1: _user$project$FileManager_View$toPx(b.x)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'top',
								_1: _user$project$FileManager_View$toPx(b.y)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'width',
									_1: _user$project$FileManager_View$toPx(b.w)
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'height',
										_1: _user$project$FileManager_View$toPx(b.h)
									},
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		},
		{ctor: '[]'});
};
var _user$project$FileManager_View$getExt = function (name) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			_elm_lang$core$List$reverse(
				A2(_elm_lang$core$String$split, '.', name))));
};
var _user$project$FileManager_View$renderFileThumb = F3(
	function (fileApi, thumbService, fullName) {
		return A2(
			_elm_lang$core$List$member,
			_user$project$FileManager_View$getExt(fullName),
			{
				ctor: '::',
				_0: 'jpg',
				_1: {
					ctor: '::',
					_0: 'jpeg',
					_1: {
						ctor: '::',
						_0: 'png',
						_1: {
							ctor: '::',
							_0: 'PNG',
							_1: {ctor: '[]'}
						}
					}
				}
			}) ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('thumb bg'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'backgroundImage',
								_1: A2(
									_elm_lang$core$Basics_ops['++'],
									'url(\"',
									A2(
										_elm_lang$core$Basics_ops['++'],
										thumbService,
										A2(
											_elm_lang$core$Basics_ops['++'],
											_elm_lang$http$Http$encodeUri(fullName),
											'\")')))
							},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'}) : A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('thumb icon-file'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$img,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src('assets/images/file.png'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$FileManager_View$renderThumb = F4(
	function (thumbService, fileApi, dir, _p7) {
		var _p8 = _p7;
		return _p8.isDir ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('thumb icon-folder'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$img,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src('assets/images/folder.png'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}) : A3(
			_user$project$FileManager_View$renderFileThumb,
			fileApi,
			thumbService,
			A2(_elm_lang$core$Basics_ops['++'], dir, _p8.name));
	});
var _user$project$FileManager_View$renderFile = F3(
	function (_p9, i, file) {
		var _p10 = _p9;
		var _p11 = _p10.dir;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'file',
						A2(
							_elm_lang$core$Basics_ops['++'],
							A2(_elm_lang$core$List$member, file, _p10.selected) ? ' selected' : '',
							(_elm_lang$core$Native_Utils.eq(_p11, _p10.clipboardDir) && A2(_elm_lang$core$List$member, file, _p10.clipboardFiles)) ? ' cut' : ''))),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$title(file.name),
					_1: {
						ctor: '::',
						_0: _user$project$FileManager_Events$onMouseDown(
							F2(
								function (x, y) {
									return _user$project$FileManager_Model$EnvMsg(
										A3(
											_user$project$FileManager_Model$MouseDown,
											_elm_lang$core$Maybe$Just(file),
											x,
											y));
								})),
						_1: {
							ctor: '::',
							_0: _user$project$FileManager_Events$onMouseUp(
								_user$project$FileManager_Model$EnvMsg(
									_user$project$FileManager_Model$MouseUp(
										_elm_lang$core$Maybe$Just(file)))),
							_1: {
								ctor: '::',
								_0: _user$project$FileManager_Events$onContextMenu(
									_user$project$FileManager_Model$EnvMsg(
										_user$project$FileManager_Model$ContextMenu(
											_elm_lang$core$Maybe$Just(file)))),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onDoubleClick(
										file.isDir ? _user$project$FileManager_Model$EnvMsg(
											_user$project$FileManager_Model$GetLs(
												A2(
													_elm_lang$core$Basics_ops['++'],
													_p11,
													A2(_elm_lang$core$Basics_ops['++'], file.name, '/')))) : _user$project$FileManager_Model$Download),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: A4(_user$project$FileManager_View$renderThumb, _p10.thumbService, _p10.fileApi, _p11, file),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('name'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(file.name),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$FileManager_View$renderUploading = F2(
	function (progress, i) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('file upload'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('thumb'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.eq(i, 0) ? A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id('progress'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'width',
												_1: _user$project$FileManager_View$toPx(progress)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}) : A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('name'),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$FileManager_View$back = function (route) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'/',
		A2(
			_elm_lang$core$String$join,
			'/',
			A2(
				_elm_lang$core$Maybe$withDefault,
				{ctor: '[]'},
				A2(
					_elm_lang$core$Maybe$andThen,
					_elm_lang$core$List$tail,
					_elm_lang$core$List$tail(
						_elm_lang$core$List$reverse(
							A2(_elm_lang$core$String$split, '/', route)))))));
};
var _user$project$FileManager_View$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('file-manager'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'display',
							_1: model.open ? 'grid' : 'none'
						},
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$FileManager_Events$onMouseMove(
						function (_p12) {
							return _user$project$FileManager_Model$None;
						}),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('bar'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A3(
						_user$project$FileManager_Util$icon,
						'arrow_back',
						'Regresar',
						_user$project$FileManager_Model$EnvMsg(
							_user$project$FileManager_Model$GetLs(
								_user$project$FileManager_View$back(model.dir)))),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('text'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(model.dir),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: model.load ? A2(
								_elm_lang$svg$Svg$svg,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$width('25'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$height('25'),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$circle,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$cx('50%'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$cy('50%'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$r('40%'),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}) : A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('files'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								model.drag ? 'drag' : ''),
							_1: {
								ctor: '::',
								_0: _user$project$FileManager_Events$onMouseDown(
									F2(
										function (x, y) {
											return _user$project$FileManager_Model$EnvMsg(
												A3(_user$project$FileManager_Model$MouseDown, _elm_lang$core$Maybe$Nothing, x, y));
										})),
								_1: {
									ctor: '::',
									_0: _user$project$FileManager_Events$onMouseMove(
										function (_p13) {
											return _user$project$FileManager_Model$EnvMsg(
												_user$project$FileManager_Model$MouseMove(_p13));
										}),
									_1: {
										ctor: '::',
										_0: _user$project$FileManager_Events$onMouseUp(
											_user$project$FileManager_Model$EnvMsg(
												_user$project$FileManager_Model$MouseUp(_elm_lang$core$Maybe$Nothing))),
										_1: {
											ctor: '::',
											_0: _user$project$FileManager_Events$onContextMenu(
												_user$project$FileManager_Model$EnvMsg(
													_user$project$FileManager_Model$ContextMenu(_elm_lang$core$Maybe$Nothing))),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('drop'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$List$reverse(
										A2(
											_elm_lang$core$List$map,
											_user$project$FileManager_View$renderUploading(model.progress),
											A2(_elm_lang$core$List$range, 0, model.filesAmount - 1))),
									A2(
										_elm_lang$core$List$indexedMap,
										_user$project$FileManager_View$renderFile(model),
										model.files))
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('control'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('button'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('alert right'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$FileManager_Model$EnvMsg(_user$project$FileManager_Model$Close)),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Cancelar'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('button'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$FileManager_Model$EnvMsg(_user$project$FileManager_Model$Accept)),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Aceptar'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: model.showBound ? _user$project$FileManager_View$renderHelper(model.bound) : A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: model.drag ? A2(_user$project$FileManager_View$renderCount, model.pos2, model.selected) : A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: model.showContextMenu ? A5(
									_user$project$FileManager_View$contextMenu,
									model.pos1,
									model.caller,
									!_elm_lang$core$List$isEmpty(model.clipboardFiles),
									_elm_lang$core$Native_Utils.cmp(
										_elm_lang$core$List$length(model.selected),
										1) > 0,
									model.filesAmount) : A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: model.showNameDialog ? A2(
										_user$project$FileManager_View$nameDialog,
										model.name,
										!_user$project$FileManager_Util$isJust(model.caller)) : A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
